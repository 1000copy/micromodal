var version="0.2.1";const MicroModal=(()=>{const t=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"])',"select:not([disabled])","textarea:not([disabled])","button:not([disabled])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'];class e{constructor({targetModal:targetModal,triggers:triggers=[],disableScroll:disableScroll=!1,debugMode:debugMode=!1,onShow:onShow=(()=>{}),onClose:onClose=(()=>{})}={}){this.modal=document.getElementById(targetModal),triggers.length>0&&this.registerTriggers(...triggers),this.disableScroll=disableScroll,this.callbacks={onShow:onShow,onClose:onClose},this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}registerTriggers(...t){t.forEach(t=>{t.addEventListener("click",()=>this.showModal())})}showModal(){this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),window.requestAnimationFrame(()=>{this.modal.classList.add("is-open");this.setFocusToFirstNode()}),this.scrollBehaviour("disable"),this.addEventListeners(),this.callbacks.onShow(this.modal)}closeModal(){const t=this.modal;this.modal.addEventListener("animationend",function e(){window.requestAnimationFrame(()=>t.classList.remove("is-open")),t.removeEventListener("animationend",e,!1)},!1),this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable"),this.activeElement.focus(),this.callbacks.onClose(this.modal)}scrollBehaviour(t){if(!1!==this.disableScroll){const e=document.querySelector("body");switch(t){case"enable":Object.assign(e.style,{overflow:"initial",height:"initial"});break;case"disable":Object.assign(e.style,{overflow:"hidden",height:"100vh"})}}}addEventListeners(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown)}removeEventListeners(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown)}onClick(t){(t.target.hasAttribute("data-close")||t.target.hasAttribute("data-micromodal-close"))&&(this.closeModal(),t.preventDefault())}onKeydown(t){27===t.keyCode&&this.closeModal(t),9===t.keyCode&&this.maintainFocus(t)}getFocusableNodes(){const e=this.modal.querySelectorAll(t);return Object.keys(e).map(t=>e[t])}setFocusToFirstNode(){const t=this.getFocusableNodes();t.length&&t[0].focus()}maintainFocus(t){var e=this.getFocusableNodes(),o=e.indexOf(document.activeElement);t.shiftKey&&0===o&&(e[e.length-1].focus(),t.preventDefault()),t.shiftKey||o!==e.length-1||(e[0].focus(),t.preventDefault())}}const o=(t,e)=>{const o=[];t.forEach(t=>{const n=e&&t.attributes[e].value||t.dataset.micromodalTrigger;void 0===o[n]&&(o[n]=[]);o[n].push(t)});return o};const n=t=>{if(!document.getElementById(t))return console.warn(`MicroModal v${version}: ❗Seems like you have missed %c'${t}'`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn(`%cExample:`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;",`<div class="modal" id="${t}"></div>`),!1};const i=t=>{if(t.length<=0)return console.warn(`MicroModal v${version}: ❗Please specify at least one %c'micromodal-trigger'`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn(`%cExample:`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;",`<a href="#" data-micromodal-trigger="my-modal"></a>`),!1};const s=(t,e)=>{i(t);if(!e)return!0;for(var o in e)n(o);return!0};const r=t=>{const n=t||{};const i=[...document.querySelectorAll(!!n.openTrigger&&"["+n.openTrigger+"]"||"[data-micromodal-trigger]")];const r=o(i,n.openTrigger);if(!0===n.debugMode&&!1===s(i,r))return;for(var c in r){let t=r[c];n.targetModal=c,n.triggers=[...t],new e(n)}};let c=null;const a=(t,o)=>{const i=o||{};i.targetModal=t;if(!0===i.debugMode&&!1===n(t))return;c=new e(i);c.showModal()};const l=()=>{c.closeModal()};return{init:r,show:a,close:l}})();export default MicroModal;
